CFLAGS = -pthread

all:
	make main.rs a.xml

main: a.o b.o
	$(CC) $(CFLAGS) -o $@ $^

main.c: a.c
	CC="cilly --gcc=/usr/bin/clang-14 --merge --keepmerged --noPrintLn" make main && \
	rm main *.o && \
	mv main_comb.c main.c

a.xml: main.c
	goblint --conf ../../conf.json \
		--enable allglobs \
		--enable justcfg \
		--set result fast_xml \
		--set outfile a.xml \
		main.c

main.rs: main.c
	echo "[{\"arguments\":[\"cc\",\"-c\",\"-pthread\",\"-o\",\"main.o\",\"main.c\"],\"directory\":\"`pwd`\",\"file\":\"main.c\"}]" > compile_commands.json && \
	rm -f main.rs && \
	c2rust transpile -e compile_commands.json > lines

ifeq ($(GOBLINT),yes)
CMD = goblint2json
XML = a.xml
else
CMD = dataflow
endif

a.json: main.rs $(XML)
	cargo run --release --manifest-path ../../Cargo.toml --bin ${CMD} -- -i . -d ../../deps

clean:
	rm -rf main *.o *.xml *.json *.rs *.rlib Cargo.* rust-toolchain target lines *.dot main.c
