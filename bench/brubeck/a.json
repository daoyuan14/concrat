{
  "mutex_map": {},
  "array_mutex_map": {},
  "struct_mutex_map": {
    "brubeck_metric": {
      "as_0": "lock"
    },
    "brubeck_slab": {
      "total_alloc": "lock"
    },
    "brubeck_tags_t": {
      "num_tag_sets": "write_mutex"
    }
  },
  "function_map": {
    "CityHash32": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "Hash32Len0to4": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "Hash32Len13to24": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "Hash32Len5to12": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "__bswap_16": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "__bswap_32": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "atoi": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "backend__thread": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_backend_register_metric": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_backend_run_threaded": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_carbon_new": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_ftoa": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_get_tag_set": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_get_tag_set_of_tag_str": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_hashtable_find": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_hashtable_foreach": {
      "entry_mutex": [],
      "node_mutex": [
        "ht.write_mutex"
      ],
      "ret_mutex": []
    },
    "brubeck_hashtable_free": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_hashtable_insert": {
      "entry_mutex": [],
      "node_mutex": [
        "ht.write_mutex"
      ],
      "ret_mutex": []
    },
    "brubeck_hashtable_new": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_hashtable_size": {
      "entry_mutex": [],
      "node_mutex": [
        "ht.write_mutex"
      ],
      "ret_mutex": []
    },
    "brubeck_hashtable_to_a": {
      "entry_mutex": [],
      "node_mutex": [
        "ht.write_mutex"
      ],
      "ret_mutex": []
    },
    "brubeck_histo_push": {
      "entry_mutex": [
        "metric.lock"
      ],
      "node_mutex": [
        "metric.lock"
      ],
      "ret_mutex": [
        "metric.lock"
      ]
    },
    "brubeck_histo_sample": {
      "entry_mutex": [
        "metric.lock"
      ],
      "node_mutex": [
        "metric.lock"
      ],
      "ret_mutex": [
        "metric.lock"
      ]
    },
    "brubeck_http_endpoint_init": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_internal__init": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_internal__sample": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_itoa": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_kafka_new": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_metric_find": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_metric_get_state": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_metric_new": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_metric_record": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_metric_sample": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_metric_set_state": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_metric_set_state_if_equal": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_metric_shard": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_parse_tags": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_sampler_init_inet": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_sampler_name": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_sampler_socket": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_server_init": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_server_run": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_slab_alloc": {
      "entry_mutex": [],
      "node_mutex": [
        "slab.lock"
      ],
      "ret_mutex": []
    },
    "brubeck_slab_init": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_statsd_msg_parse": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_statsd_new": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_statsd_packet_parse": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_tag_offset": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_tags_create": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_tags_find": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "brubeck_tags_insert": {
      "entry_mutex": [],
      "node_mutex": [
        "tags.write_mutex"
      ],
      "ret_mutex": []
    },
    "build_rdkafka_config": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "carbon_connect": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "carbon_disconnect": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "carbon_is_connected": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "ck_ht_entry_key_set": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "ck_ht_entry_set": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "ck_ht_entry_value": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "count_char_in_str": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "counter__record": {
      "entry_mutex": [],
      "node_mutex": [
        "metric.lock"
      ],
      "ret_mutex": []
    },
    "counter__sample": {
      "entry_mutex": [],
      "node_mutex": [
        "metric.lock"
      ],
      "ret_mutex": []
    },
    "dr_msg_cb": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "dump_all_metrics": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "dump_metric": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "each_metric": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "error_cb": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "expire_metric": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "find_substr": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "flow_stats": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "fmix": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "gauge__record": {
      "entry_mutex": [],
      "node_mutex": [
        "metric.lock"
      ],
      "ret_mutex": []
    },
    "gauge__sample": {
      "entry_mutex": [],
      "node_mutex": [
        "metric.lock"
      ],
      "ret_mutex": []
    },
    "get_config_name": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "getproctitle": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "gh_log_die": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "gh_log_instance": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "gh_log_open": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "gh_log_reopen": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "gh_log_set_instance": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "gh_log_write": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "handle_request": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "histo_percentile": {
      "entry_mutex": [
        "metric.lock"
      ],
      "node_mutex": [
        "metric.lock"
      ],
      "ret_mutex": [
        "metric.lock"
      ]
    },
    "histo_sort": {
      "entry_mutex": [
        "metric.lock"
      ],
      "node_mutex": [
        "metric.lock"
      ],
      "ret_mutex": [
        "metric.lock"
      ]
    },
    "histo_sum": {
      "entry_mutex": [
        "metric.lock"
      ],
      "node_mutex": [
        "metric.lock"
      ],
      "ret_mutex": [
        "metric.lock"
      ]
    },
    "histogram__record": {
      "entry_mutex": [],
      "node_mutex": [
        "metric.lock"
      ],
      "ret_mutex": []
    },
    "histogram__sample": {
      "entry_mutex": [],
      "node_mutex": [
        "metric.lock"
      ],
      "ret_mutex": []
    },
    "ht_free": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "ht_malloc": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "initproctitle": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "json_decref": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "json_incref": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "json_object_set_nocheck": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "kafka_connect": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "kafka_flush": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "kafka_is_connected": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "kafka_shutdown": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "load_backends": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "load_config": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "load_samplers": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "load_signalfd": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "load_timerfd": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "main": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "meter__record": {
      "entry_mutex": [],
      "node_mutex": [
        "metric.lock"
      ],
      "ret_mutex": []
    },
    "meter__sample": {
      "entry_mutex": [],
      "node_mutex": [
        "metric.lock"
      ],
      "ret_mutex": []
    },
    "multibloom_check": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "multibloom_new": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "multibloom_reset": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "mur": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "new_metric": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "parse_float": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "parse_tag": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "pickle1_double": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "pickle1_each": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "pickle1_flush": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "pickle1_init": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "pickle1_int32": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "pickle1_push": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "plaintext_each": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "push_node": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "read32": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "ror32": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "run_worker_threads": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "safe_lookup_metric": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "send_metric": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "send_ping": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "send_stats": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "setproctitle": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "shutdown_sampler": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "signal_triggered": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "sock_enlarge_in": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "sock_enlarge_out": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "sock_setnonblock": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "sock_setreuse": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "sock_setreuse_port": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "starts_with": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "statsd__thread": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "statsd_run_recvmmsg": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "statsd_run_recvmsg": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "tags_free": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "tags_malloc": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "timer_elapsed": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "update_flows": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "update_proctitle": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "url_to_inaddr2": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "value_cmp": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "write_in_full": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "xcalloc": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "xmalloc": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    },
    "xrealloc": {
      "entry_mutex": [
        "metric.lock"
      ],
      "node_mutex": [
        "metric.lock"
      ],
      "ret_mutex": [
        "metric.lock"
      ]
    },
    "xwrite": {
      "entry_mutex": [],
      "node_mutex": [],
      "ret_mutex": []
    }
  }
}